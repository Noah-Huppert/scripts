#!/usr/bin/env bash
# Helpers
function die() {
    echo "Error: $@" >&2
    exit 1
}

function check() {
    if [ "$?" -ne 0 ]; then
	   die "$@"
    fi
}

# Options
opt_logs_dir=/var/log/socklog

while getopts "hd:l" opt; do
    case "$opt" in
	   h)
		  cat <<EOF
logs - Display system logs from socklog with LNav

USAGE

   logs [-h,-d LOGS_DIR,-l] [GROUP]

OPTIONS

   -h             Show help and exit.
   -d LOGS_DIR    Base logging directory (defaults to $opt_logs_dir).
   -l             List log groups and exit.

ARGUMENTS

   GROUP    Log group to display, defaults to 'everything'.

BEHAVIOR

   Displays system logs from the specified group using LNav.

   Expects logs to be in the directory LOGS_DIR/GROUP/current

EOF
		  exit 0
		  ;;
	   d) opt_logs_dir="$OPTARG" ;;
	   l) opt_list=true ;;
	   '?') die "Unknown option" ;;
    esac
done

shift $((OPTIND-1))

# Arguments
group="everything"
if [ -n "$1" ]; then
    group="$1"
    shift
fi

# Ensure the user has access to logs
if [ ! -d "$opt_logs_dir" ]; then
    die "Logs directory \"$opt_logs_dir\" does not exist"
elif [ ! -r "$opt_logs_dir" ]; then
    die "User \"$USER\" does not have permission access to the \"$opt_logs_dir\" logs directory"
fi

# Main
if [ -n "$opt_list" ]; then
    ls "$opt_logs_dir" | xargs -n1 echo
    check "Failed to list log groups"
else
    group_dir="$opt_logs_dir/$group"

    # Check group exists
    if [ ! -d "$group_dir" ]; then
	   die "Group \"$group\" does not exist"
    elif [ ! -r "$group_dir" ]; then # Check permissions
	   die "User \"$USER\" does not have permission to access the \"$group_dir\" log group directory"
    fi

    # View
    lnav "$group_dir"
fi
