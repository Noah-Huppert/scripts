#!/usr/bin/env bash
#?
# wifi - Shortcut to connect to wifi networks
#
# USAGE
#
#	wifi OPTIONS
#
# OPTIONS
#
#	-n NAME        Name of network, if no network found with name, and 
#	               value is one of: home, edu, omega, or umass, then 
#	               the script will be called again with the provided 
#	               shortcut's real network name
#	-r             Indicates that the NAME value is a raw network name and
#	               and not a shortcut name
#	-l             List available networks
#	-s             Scan for networks
#	-h             Show help text
#
# BEHAVIOR
#
# 	Connects, scans, or lists networks.
#
#?

# {{{1 Exit on any error
set -e

# {{{1 Configuration
mode_connect="connect"
mode_list="list"
mode_scan="scan"

shortcut_home="home"
shortcut_edu="edu"
shortcut_omega="omega"
shortcut_umass="umass"

shortcut_home_name="Katla-5G"
shortcut_edu_name="eduroam"
shortcut_omega_name="Omega-0A0B"
shortcut_umass_name="UMASS"

mode="$mode_connect"

# {{{1 Options
# {{{2 Get
while getopts "n:rlsh" opt; do
	case "$opt" in
		n)
			name="$OPTARG"
			;;

		r)
			raw="true"
			;;

		l)
			mode="$mode_list"
			;;

		s)
			mode="$mode_scan"
			;;

		h)
			show-help "$0"
			exit 1
			;;
	esac
done

# {{{2 Verify
if [[ "$mode" == "$mode_connect" ]]; then
	# {{{# name
	if [ -z "$name" ]; then
		echo "Error: -n NAME option required" >&2
		exit 1
	fi
fi

# {{{1 Do action based on mode
if [[ "$mode" == "$mode_list" ]]; then
	# {{{2 List networks
	if ! connmanctl services; then
		echo "Error: Failed to list networks" >&2
		exit 1
	fi
elif [[ "$mode" == "$mode_scan" ]]; then
	# {{{2 Scan networks
	echo "Scanning for wifi networks"

	if ! connmanctl scan wifi; then
		echo "Error: Failed to scan for networks" >&2
		exit 1
	fi
elif [[ "$mode" == "$mode_connect" ]]; then	
	# {{{2 Find network with specified name
	while read info; do
		# {{{3 Extract information
		# Either in 3 part form:
		#
		#	STATUS NAME SERVICE
		#
		# Or in 2 part form:
		#
		#	NAME SERVICE
		# 

		# If in 3 part form
		if [ ! -z "$(echo $info | awk '{ print $3 }')" ]; then
			svc_name=$(echo "$info" | awk '{ print $2 }')
			svc=$(echo "$info" | awk '{ print $3 }')
		else # In 2 part form
			svc_name=$(echo "$info" | awk '{ print $1 }')
			svc=$(echo "$info" | awk '{ print $2 }')
		fi

		# {{{3 Connect if name matches
		if [[ "$svc_name" == "$name" ]]; then
			out=$(connmanctl connect "$svc" 2>&1)

			if [[ "$?" != "0" || "$out" =~ Error.* ]]; then
				echo "$out" >&2
				echo "Error: Failed to connect to $name ($svc)" >&2
				exit 1
			fi

			echo "Connect to $name ($svc)"
			exit 0
		fi
	done <<< $(connmanctl services)

	# {{{2 If not raw mode
	if [ -z "$raw" ]; then
		# {{{3 Check if network name a shortcut
		case "$shortcut" in 
			"$shortcut_home")
				shortcut_name="$shortcut_home_name"
				;;

			"$shortcut_edu")
				shortcut_name="$shortcut_edu_name"
				;;

			"$shortcut_omega")
				shortcut_name="$shortcut_omega_name"
				;;

			"$shortcut_umass")
				shortcut_name="$shortcut_umass_name"
				;;
		esac

		# {{{3 If shortcut call again with shortcut's network name
		if [ ! -z "$shortcut_name" ]; then
			echo "Shortcut: $name ($shortcut_name)"

			"$0" -n "$shortcut_name" -r
			exit "$?"
		fi
	fi

	echo "Error: Could not find network with name: $name" >&2
	exit 1
fi
